#include<stdio.h>
#include<stdlib.h>
#include"sort.h"

int count = 0;
void swap(int *p1, int *p2)   //&a  &b交换两个数的值
{
	int tmp;
	tmp = *p1;
	*p1 = *p2;
	*p2 = tmp;
}

void exchange_sort(int *arr, int n)//交换排序
                            //将第一个元素与其后的每个元素比较，从小到大排序
{
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			//count++;
			if (arr[i] > arr[j])
			{
				swap(&arr[i], &arr[j]);
			}
		}
	}
	#include"sort.h"
#include<stdio.h>
extern int count;
int main()
{
	int a = 10;
	int b = 90;
	swap(&a, &b);
	printf("a=%d,b=%d\n", a, b);
	//****************************************

	int arr[] = { 9,5,8,2,6,1 };
	int n1 = sizeof(arr) / sizeof(arr[0]);
	exchange_sort(arr, n1);
	Display(arr, n1);
	//printf("exchange.count=%d\n", count);
	//****************************************

	int brr[] = { 9,5,8,2,6,1 };
	int n2 = sizeof(brr) / sizeof(brr[0]);
	bubble_sort(brr, n2);
	Display(brr,n2);
	printf("bubble.count=%d\n", count);
	//****************************************

	int crr[] = { 9,5,8,2,6,1 };
	int n3 = sizeof(crr) / sizeof(crr[0]);
	select_sort(crr, n3);
	Display(crr, n3);
	printf("select.count=%d\n", count);
	//****************************************

	int drr[] = { 9,5,8,2,6,1 };
	int n4 = sizeof(drr) / sizeof(drr[0]);
	shell_sort(drr, n4, 3);
	Display(drr, n4);
	shell_sort(drr, n4, 1);
	Display(drr, n4);
	return 0;
}
}


void bubble_sort(int *arr, int n)
{
	bool flag = true;
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = 0; j < n - 1 - i; j++)
		{
		//	count++;
			if (arr[j] > arr[j + 1])
			{
				swap(&arr[j], &arr[j + 1]);
				flag = false;
			}
		}
		if (flag)
		{
			break;
		}
		flag = true;
	}
}

void select_sort(int *arr, int n)
{
	int min = arr[0];
	int min_index = 0;
	for (int i = 0; i < n - 1; i++)//将第一个元素当作最小的，使最小的和其余每个元素进行比较
		                     //如果其余中有比第一元素更小的，一轮彻底比较完，进行交换
		                    //最终前面的元素都是由小到大
	{
		min = arr[i];
		min_index = i;
		for (int j = i + 1; j < n; j++)
		{
			count++;
			if (arr[j] < min)
			{
				min = arr[j];
				min_index = j;
			}
		}
		if (i != min_index)
		{
			swap(&arr[i], &arr[min_index]);
		}
	}
}

void shell_sort(int *arr, int n,int gap)
{
	int i;
	int j;
	int k;
	int tmp;
	for (int i = gap; i < n; i++)
	{
		tmp = arr[i];
		for (j = i - gap; j >= 0; j -= gap)
		{
			if (arr[j] > tmp)
			{
				arr[j + gap] = arr[j];
			}
			else
			{
				break;
			}
		}
		arr[j + gap] = tmp;
	}
}
void Display(int *arr, int n)
{
	for (int i = 0; i < n; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
	
}
